<?php

class Query {
	function __construct($type = 'SELECT', $table) {
		$this->type = strtoupper($type);
		$this->table = $table;
		$this->cols = "";
		$this->where = "";
	}

	function addSelector($name, $alias) {
		if(is_array($name)) {
			foreach($name as $cur) {
				$this->cols[] = "$cur";
			}
		} else {
			if($name == "*")
				$this->cols[] = "*";
			elseif($alias)
				$this->cols[] = "$name as $alias";
			else 
				$this->cols[] = "$name";
		}
	}
	
	function addClause($col, $value, $not = false) {
		$splitVal = explode('/', $value);
		if(count($splitVal) == 1) {
			if($not) $this->where[] = "$col != '$value'";
			else $this->where[] = "$col = '$value'";
		} else {
			$cur;
			foreach($splitVal as $index => $value)
				$cur[] = "$col = '$value'";
			$this->where[] = implode(' OR ', $cur);
		}
				
	}
		
	function addNewValue($col, $value) {
		$this->update[] = "$col = '$value'";
		$this->fields[] = $col;
		$this->values[] = "'$value'";
	}
	
	function searchTerms($cols, $value) {
		$this->searchCols = implode("," , $cols);
		$this->searchValue = $value;
	}
	
	function setOrder($col, $dir) {
		$this->orderCol = $col;
		if(isset($dir))
			$this->orderDir = $dir;
		else
			$this->orderDir = "DESC";
	}
	
	function buildQuery($execute = TRUE) {
		switch($this->type) {
			case "SELECT":
				if($this->cols) {
					$cols = implode(',', $this->cols);
					$this->sql = "SELECT $cols FROM `{$this->table}`";
				} else
					$this->sql = "SELECT * FROM `{$this->table}`";
			break;
			case "UPDATE":
				$update = implode(',', $this->update);
				$this->sql = "UPDATE `{$this->table}` SET $update";
			break;
			case "INSERT":
				$fields = implode(',', $this->fields);
				$values = implode(',', $this->values);
				$this->sql = "INSERT INTO {$this->table}($fields) values($values)";
			break;
			case "DELETE":
				$this->sql = "DELETE FROM {$this->table}";
			break;
			case "SEARCH":
				$this->searchSQL = "MATCH({$this->searchCols}) AGAINST('{$this->searchValue}')";
				if($this->cols) {
					$cols = implode(',', $this->cols);
					$this->sql = "SELECT $cols, {$this->searchSQL} AS qScore FROM `{$this->table}`";
				} else
					$this->sql = "SELECT *, {$this->searchSQL} AS qScore FROM `{$this->table}`";
				$this->sql .=  " WHERE {$this->searchSQL}";
			break;
		}
				
		if(is_array($this->where)) {
			$where = implode(' AND ', $this->where);
			if($this->type == "SEARCH")
				$this->sql .= " AND $where";
			else
				$this->sql .= " WHERE $where";
		}
		
		if(isset($this->orderCol)) {
			$this->sql .= " ORDER BY {$this->orderCol} {$this->orderDir}";
		}

		if($execute)
			return $this->makeQuery();
		else
			return $this->sql;
	}
	
	function makeQuery() {
		$result = mysql_query($this->sql) or die("<b>Error</b>: " . mysql_error() . "\n<br /><b>Statement</b>: {$this->sql}");
		if($result) {
			switch($this->type) {
				case "UPDATE":
				case "DELETE":
					return true;
				break;
				case "INSERT":
					return mysql_insert_id();
				break;
				default:
					while($row = mysql_fetch_array($result, MYSQL_ASSOC)) {
						$this->result[] = $row;
					}
					if(isset($this->result)) {
						$this->rowCount = count($this->result);
						if($this->rowCount == 1) $this->result = $this->result[0];
						return $this->result;
					} else {
						$this->rowCount = 0;
						return false;
					}
				break;
			}
		} else return false;
	}
}
